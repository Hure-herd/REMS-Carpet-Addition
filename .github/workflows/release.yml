name: release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Your release tag"
        required: true
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-24.04
    outputs:
      jars: ${{ steps.set-jars.outputs.jars }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'

      - name: Make Gradle Wrapper executable
        run: chmod +x ./gradlew

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build all versions
        run: ./gradlew build
        env:
          BUILD_RELEASE: "true"
          CHANGELOG: ${{ github.event.inputs.tag }}

      - name: Prepare built jars
        id: set-jars
        shell: bash
        run: |
          JARS=()
          for f in versions/*/build/libs/*.jar; do
            if [[ ! "$f" =~ -sources\.jar$ ]] && [[ ! "$f" =~ -shadow\.jar$ ]] && [[ ! "$f" =~ -dev\.jar$ ]]; then
              JARS+=("$f")
            fi
          done
          if [ ${#JARS[@]} -eq 0 ]; then
            echo "No jars found!"
            exit 1
          fi
          # 输出为逗号分隔字符串
          JARS_CSV=$(IFS=','; echo "${JARS[*]}")
          echo "jars=$JARS_CSV" >> $GITHUB_OUTPUT

  publish_github:
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          files: ${{ needs.build.outputs.jars }}

  publish_modrinth:
    needs: build
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        mc_version: [1.19.4, 1.20.1, 1.20.4, 1.20.6, 1.21, 1.21.1, 1.21.2, 1.21.4, 1.21.5, 1.21.8]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select jar for this MC version
        id: select_jar
        shell: bash
        run: |
          IFS=',' read -ra JARS <<< "${{ needs.build.outputs.jars }}"
          echo "All jars: ${JARS[@]}"
          FOUND=""
          for j in "${JARS[@]}"; do
            if [[ "$j" == *"mc${{ matrix.mc_version }}"* ]]; then
              FOUND="$j"
              break
            fi
          done
          if [ -z "$FOUND" ]; then
            echo "No jar found for MC ${{ matrix.mc_version }}"
            exit 1
          fi
          echo "jar=$FOUND" >> $GITHUB_OUTPUT

      - name: Upload to Modrinth
        uses: Kira-NT/mc-publish@v3.3
        with:
          modrinth-id: 175yf82Z
          modrinth-token: ${{ secrets.MODRINTH_API_TOKEN }}
          files: ${{ steps.select_jar.outputs.jar }}
          name: REMS Carpet Addition ${{ github.event.inputs.tag }} for MC ${{ matrix.mc_version }}
          version: ${{ github.event.inputs.tag }}-mc${{ matrix.mc_version }}
          version-type: release
          loaders: fabric
          game-versions: ${{ matrix.mc_version }}
          game-version-filter: any
          dependencies: |
            carpet(required)
          modrinth-changelog: ${{ github.event.inputs.tag }}
